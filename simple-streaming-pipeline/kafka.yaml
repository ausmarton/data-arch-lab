apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: streaming-pipeline
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:latest
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper:2181"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka:9092"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_SSL_KEYSTORE_FILENAME
          value: "/etc/kafka/secrets/kafka.server.keystore.jks"
        - name: KAFKA_SSL_KEYSTORE_CREDENTIALS
          value: "/etc/kafka/secrets/kafka_keystore_creds"
        - name: KAFKA_SSL_KEY_CREDENTIALS
          value: "/etc/kafka/secrets/kafka_sslkey_creds"
        - name: KAFKA_SSL_TRUSTSTORE_FILENAME
          value: "/etc/kafka/secrets/kafka.server.truststore.jks"
        - name: KAFKA_SSL_TRUSTSTORE_CREDENTIALS
          value: "/etc/kafka/secrets/kafka_truststore_creds"
        - name: KAFKA_SSL_CLIENT_AUTH
          value: "required"
        volumeMounts:
        - name: kafka-certificates
          mountPath: /etc/kafka/secrets
          readOnly: true
      volumes:
      - name: kafka-certificates
        secret:
          secretName: kafka-certificates
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: streaming-pipeline
spec:
  selector:
    app: kafka
  ports:
  - port: 9092
    targetPort: 9092