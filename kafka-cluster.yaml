apiVersion: v1
kind: Namespace
metadata:
  name: kafka-cluster
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  namespace: kafka-cluster
data:
  KAFKA_LOG_DIRS: "/bitnami/kafka/data"
  KAFKA_ZOOKEEPER_CONNECT: "zookeeper.kafka-cluster:2181"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: kafka-cluster
spec:
  replicas: 1
  serviceName: zookeeper
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: bitnami/zookeeper:latest
          env:
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"
          ports:
            - containerPort: 2181
          volumeMounts:
            - name: zookeeper-data
              mountPath: /bitnami/zookeeper
      volumes:
        - name: zookeeper-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: kafka-cluster
spec:
  ports:
    - port: 2181
  clusterIP: None
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka-cluster
spec:
  replicas: 3
  serviceName: kafka
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka:latest
          env:
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              valueFrom:
                configMapKeyRef:
                  name: kafka-config
                  key: KAFKA_ZOOKEEPER_CONNECT
            - name: KAFKA_CFG_LOG_DIRS
              valueFrom:
                configMapKeyRef:
                  name: kafka-config
                  key: KAFKA_LOG_DIRS
            - name: KAFKA_CFG_BROKER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['apps.kubernetes.io/pod-index'] 
          ports:
            - containerPort: 9092
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka
      volumes:
        - name: kafka-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: kafka-cluster
spec:
  ports:
    - port: 9092
  clusterIP: None
  selector:
    app: kafka
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
  namespace: kafka-cluster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      containers:
        - name: kafka-ui
          image: provectuslabs/kafka-ui:latest
          ports:
            - containerPort: 8080
          env:
            - name: KAFKA_CLUSTERS_0_NAME
              value: "minikube-kafka"
            - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
              value: "kafka.kafka-cluster:9092"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui
  namespace: kafka-cluster
spec:
  type: NodePort
  ports:
    - port: 8080
      nodePort: 30000
  selector:
    app: kafka-ui

